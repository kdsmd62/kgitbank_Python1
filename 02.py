'''
2. 자료형
2.1 숫자형
    2.1.1 정수형
    a = 123     # 'a는 123이다.'가 아니라 'a에 123이라는 값을 a라는 이름에 넣어라'라는 뜻이다
    b = -178    # 'a, b'는 변수라고 하고 '123, -178'은 값이라고 한다.
    print(a,b)  # print() 함수는 '()안에 있는 내용을 화면에 출력해라'라는 뜻이다.
                # 파이썬에서는 이와같은 형태를 함수(Function)라고 한다.
    a, b = 123, -178
    print(a,b)      # a, b의 값을 출력 
    print(a + b)    # a와 b의 더한 값을 출력
    print(a - b)    # a에서 b를 뺀 값을 출력
    print(a * b)    # a와 b의 곱한 값을 출력
    print(a / b)    # a를 b로 나눈 값을 출력

    2.1.2 실수형
    a, b, c, d = 1.2, -3.45 , 4.24E10, 4.24e10      # 실수형은 모두 소수점 형태로 선언한다.
    print(a, b, c, d)       
    print(a + b)

    2.1.3 8진수와 16진수, 10진수
    e, f, g = 0o177, 0x8ff, 0xABC       # 8진수(Octal), 16진수(Hexa Decimal), 10진수(Decimal)
    print(e,f,g)        # 출력 결과는 모두 10진수이다.
    print(e + f + g)

    2.1.4 실습
    a, b, c, d = 3, 4, 7, 3
    print(a + b, c + d)
    print(a - b, c - d)
    print(a * b, c * d)
    print(a / b, c / d)
    print(a ** b)       # 3^4 = 81

    a, b, c, d = 3, 4, 7, 3
    print(c % d)        # 3을 4로 나눈 나머지(나눌 수가 없기 때문에 '3'이 출력)
    print(d % c)        # 4를 3으로 나눈 나머지('1'이 출력)
    print(c // d)       # 3을 4로 나눈 몫(나눌 것이 없기 때문에 '0'이 출력)
    print(d // c)       # 3을 3으로 나눈 몫('1'이 출력)
    
    e, f = 14, 15
    g = e // 2      # 우측의 연산되는 값의 결과를 좌측의 변수에 대입
    print('주어진 값의 나머지는', e//2, '가(이) 되므로 짝수이다.')
    print('주어진 값의 나머지는', g, '가(이) 되므로 짝수이다.')
    print("주어진 값의 나머지는", g, "가(이) 되므로 짝수이다.")
    
2.2 문자(열)형
2.2.1 문자형 유형
    - 큰 따옴표(")로 양쪽 둘러싸기
        "Hello, Samadal"
    - 작은 따옴표(')로 양쪽 둘러싸기
        'Hello, Samadal'
    - 큰 따옴표 3개(""")로 양쪽 둘러싸기
        """Hello, Samadal"""
    - 작은 따옴표 3개(' '')로 양쪽 둘러싸기
        ' ''Hello, Samadal' ''
        
2.2.2 문자열에 따옴표 포함하기
    a = "KgItBank's Samadal"
    #a = 'KgItBank's Samadal'    # 오류(작은 따옴표 사용불가)
    print(a)

    #b = ""KgItBank." Samadal"      # 오류(큰 따옴표 사용불가)
    b = '"KgItBank." Samadal'
    print(b)
    
2.2.3 여러 줄인 문자열을 변수에 대입
    c = "KgItBank\nSamadal"     # 개행문자(\n)
    print(c)
2.2.4 Escape Code
    print('문장이 실행될 때 출력 형태를 변경하고자 할 때 많이 사용')
    print("이스케이프 코드는 문자열 안에서만 동작한다. 매우 중요")
    print('다음 라인으로\이동')     # \는 그냥 문자열
    print('1다음 라인으로\n이동')   # 개행문자(줄바꿈)(가장 많이 사용)
    print('2다음 라인으로\r이동')   # \r 뒤에 있는 문자(열)을 맨 앞으로 이동(해당 내용을 대체)
                                    # Replace. 일반적으로 영문자, 숫자는 1byte이고 
                                    # 한글은 2byte이지만 여기서는 '갯수'만을 기준으로 계산된다.
    print(123456781234567812345678)
    print('3다음 라인으로\t이동')   # 탭(간격조절, 기본값은 8칸(8byte))
    print('4다음 라인으로\'이동')   # 기호(') 삽입
    print('5다음 라인으로\"이동')   # 기호(") 삽입 
    print('6다음 라인으로\\이동')   # 기호(\) 삽입
                  
    print("나의 이름은 \'사마달\'입니다.")
    print("나의 이름은 '사마달'입니다.")
    a = 20
    print('나의 나이는',a,'살입니다.')
    print('나의 나이는',a,'\b살입니다.')    # Back Space

2.2.5 문자열 연산하기
    kg = 'Python_'
    it = 'Bank'
    print(kg + it)      # 문자열 더하기
    print(kg * 2)       # 문자열 곱하기(//반복)
    print('=' * 50)     # 문자열과 숫자 곱하기(//반복)
    var1 = '='          # 문자열을 변수로 치환
    var2 = 50           # 숫자를 문자열로 표현('50')하지 않는 이상 따옴표 없이 사용 가능
    print(var1 * var2)
    print(len(kg))     # 문자열의 길이(Length) 구하는 함수

2.2.6 실습
    문구(나의 이름은 사마달이고 나이는 20살입니다. 주소는 바닷가입니다.)를 변수 치환을 이용해서 
    3줄로 출력하도록 한다.
    name = "사마달"
age = 20
addr = "바닷가"
print('나의 이름은', name + '이고', '\n나이는', age , '\b살입니다.', '\n주소는', addr + '입니다.')

str1 = '\n나의 이름은 사마달이고 \n나이는 20살입니다. \n주소는 바닷가입니다'
print(str1)


a = '나의 이름은 사마달이고'
b = '\n나이는 20살입니다.'
c = '\n주소는 바닷가입니다.'
#print('\n' + a + '\n' + b + '\n' + c)
print(a + b + c)
'''



